---
description: 
globs: 
alwaysApply: false
---
# Material Content Creation Guidelines

## Role and Tone

- Act as an expert teacher who explains concepts clearly
- Use simple, accessible language, as if explaining to someone younger, but maintain a professional and informative tone (avoid being overly informal or childish).
- Apply storytelling techniques and simple analogies when appropriate
- Maintain a balance: detailed enough to be clear, but concise enough to be engaging
- Use baby words so student can easy to understand.

## Content Structure

- Write all content in `id.mdx` format
- Always start sections with `##` (H2) headings, never use `#` (H1)
- Create hierarchy with `###` (H3) for subtopics, Never use `###` (H4), H3 is deep enough
- Organize content in a logical flow: concept introduction → explanation → examples → applications
- Must be clear and don't be ambigous. If you write a step, please give example also in a step, so student can easy understand instead of reading your step only
- If you write real applications, please give example also, not only a list, it can be how the formula applied or real case
- Be complete in explanations but avoid unnecessary verbosity
- DO NOT write same heading like in metadata title
- YOU NEVER only write an exercise, but you also give the Key Answers
- DO NOT USE NESTED LIST! YOU MUST WRITE THE MOST CLEAN WAY

## Mathematical Content

- Always use the KaTeX components provided in `mdx-components.tsx` ([mdx-components.tsx](mdc:mdx-components.tsx)) (BUT you dont need to import that in mdx file, you can use it directly) for mathematical expressions:
  - `<InlineMath math="equation" />` for inline formulas.
  - `<BlockMath math="equation" />` for standalone equations.
- Include parentheses _inside_ the `math` attribute: `<InlineMath math="(a+b)" />` NOT `(<InlineMath math="a+b" />)`.
- Never use mathematical notation directly in headings.
- If you have multiple `<BlockMath />` components consecutively, wrap them in `<div className="flex flex-col gap-4">` for proper spacing.
- Use components like the one in `3d-coordinate.tsx` ([components/math/3d-coordinate.tsx](mdc:components/math/3d-coordinate.tsx)) when appropriate to help visualize concepts (e.g., 3D coordinate systems).

## Content Development

- Focus on core concepts first before moving to applications
- Use uploaded images as primary reference material
- Develop content based on the image but use your own explanations and wording
- Ensure all explanations are unambiguous while remaining accessible
- Do not create or reference non-existent images or figures

## Reference Usage

- Use uploaded images as the primary reference source
- Use @Web only as secondary reference to verify information
- Ensure 100% accuracy of all content
- Adapt reference material using your own explanations rather than direct copying

## Example Structure

```
## Main Topic
Brief introduction to the main topic.

### Subtopic 1
Explanation using simple language with <InlineMath math="relevant_equation" /> as needed.

### Subtopic 2
Clear examples with step-by-step explanations.

## Applications
How this topic applies to real-world scenarios.
```
