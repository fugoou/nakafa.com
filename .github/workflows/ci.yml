name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Use oven-sh/setup-bun action to install Bun
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest # Or specify a specific bun version

      # Setup Node.js (Bun needs Node.js runtime)
      - name: Set up Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          # Caching is handled by actions/cache below, not setup-node

      # Cache Bun dependencies
      - name: Cache Bun dependencies
        id: cache-bun
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache # The path to Bun's global cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        # Only run install if cache was not hit
        run: bun install --frozen-lockfile

      - name: Run linters # Assumes 'lint' script exists in package.json
        run: bun run lint

      - name: Run tests # Assumes 'test' script exists in package.json
        run: bun run test --if-present # Use --if-present to run only if script exists

      - name: Build project # Assumes 'build' script exists in package.json
        run: bun run build
